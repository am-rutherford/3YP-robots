
import numpy as np
from matplotlib import animation
from matplotlib import pyplot as plt
from matplotlib import patches



cg_path = [[-0.06564742293478415, 0.07756479398426064], [-0.035493854124762816, 0.008337845632213643], [0.13001228977408583, -1.2093993946071986], [0.683555977822143, -5.541292325751864], [1.2582544313040118, -10.506870172031444], [1.832806078081027, -15.473288054513567], [2.4072073931972793, -20.439950270009675], [2.981517465049981, -25.406715957956845], [3.556206651044367, -30.37081878813774], [4.130534215715309, -35.33765630656653], [4.704829202436399, -40.304514581040095], [5.279098999035937, -45.271387111331286], [5.853348728647809, -50.238269904723474], [6.427582108842536, -55.20516036321324], [7.001801920480052, -60.17205671829058], [7.576010296659477, -65.13895772114078], [8.150208908530697, -70.10586246271504], [8.724399089116554, -75.07277026412739], [9.29858191836391, -80.03968060716937], [9.87275828310642, -85.00659308873571], [10.4469289203089, -89.97350739004474], [11.02109444888126, -94.9404232553139], [11.595255393499055, -99.90734047665116], [12.169412202721054, -104.87425888313548], [12.743565262964312, -109.84117833278468], [13.317714909421728, -114.80809870655108], [13.89186143468954, -119.77501990376965], [15.075197023826602, -124.47762902902964], [16.577542894335455, -129.07709202927884], [18.31634222956808, -133.60351418190615], [20.097018221003346, -138.12038720308672], [21.94031874228725, -142.6254808913677], [23.949219151881724, -147.072633800576], [26.102459339101873, -151.47168543618363], [27.972198843504273, -155.99851236452685], [29.941737321453065, -160.48751311343705], [31.89753520106772, -164.99284912229032], [33.49672327019445, -169.65632473117782], [35.36432453030423, -174.20506693002426], [37.12749865889873, -178.8049317429758], [38.90934249643751, -183.39653934315183], [40.45360748129811, -188.08099689027983], [41.88096340728615, -192.82143978023677], [43.45595577134323, -197.50912257147692], [44.8124379522247, -202.28228679019583], [46.11458619152355, -207.07547988032192], [47.203731381824944, -211.9536020787166], [48.29027285040834, -216.8316458146745], [49.374913299546826, -221.709879028602], [50.45944838797278, -226.58784447436275], [51.54401894772128, -231.4653431367276], [52.62875229133511, -236.34411375111532], [53.71446412281823, -241.2244490834701], [54.80020824639401, -246.10489777709728], [55.88588756177896, -250.9852877353532], [56.971516449989394, -255.8656353095004], [58.05739394715095, -260.7459263952064], [59.14318155084774, -265.6261320890288], [60.22897927546034, -270.50630174992295]]
x_cg = [i[0] for i in cg_path]
y_cg = [i[1] for i in cg_path]

pred_path = [[0, -300], [0, -300], [0, -300], [0, -300], [-0.170009479395966, -293.7022946910134], [-0.34968821162340524, -286.7046017131246], [-0.518696788227229, -279.7066430239418], [-0.6760561978904883, -272.7084128298308], [-0.8207809630323099, -265.7099100923282], [-0.951816192373264, -258.71113784950893], [-1.0679446969404285, -251.71210261303904], [-1.1678423223418903, -244.7128171663468], [-1.2500039124884172, -237.71330139313855], [-1.3126972068453902, -230.71358460266092], [-1.3539043085224225, -223.71370890217025], [-1.3712447921873732, -216.71373412116503], [-1.361871791787136, -209.71374512178105], [-1.322327662726439, -202.71386290566], [-1.2483375004419743, -195.7142619848595], [-1.1345037026696114, -188.71519852730475], [-0.9738359287844984, -181.71705797336065], [-0.7569921037738713, -174.7204400235895], [-0.4709766708585244, -167.72632097609653], [-0.09672626015621816, -160.73639260754604], [0.3958706731237964, -153.75386116861466], [1.0599667870099294, -146.78570062490076], [2.008931330650855, -139.85121285438936], [2.7749854332448987, -135.8235320402385], [3.9838742523953456, -137.54058871927032], [4.676404563199935, -142.01959331103942], [6.564729021685852, -144.3063056218077], [7.414819996740503, -147.73879381184983], [9.140176259857464, -152.02737397792765], [11.535811641875254, -155.4918535914744], [13.89711480357109, -159.01769918028748], [14.68745083876397, -164.28278771252891], [16.974229441873092, -168.48236914013708], [19.20313358059494, -172.6374379620854], [20.538494661648333, -177.51448438308444], [21.772691818195405, -182.43029119562615], [23.733862649053712, -186.72263402136025], [25.61575869516377, -190.1198032554609], [27.32006094169449, -194.99044790223024], [28.924833580321337, -199.8149677155716], [29.609014581319443, -203.84555003172437], [28.322632285333196, -210.1996530848091], [26.21710397853514, -216.8754864072695], [24.11157567173708, -223.55131972972987], [22.006047364939025, -230.2271530521903], [19.900519058140976, -236.90298637465068], [17.79499075134292, -243.57881969711107], [15.689462444544866, -250.2546530195715], [13.583934137746818, -256.9304863420318], [11.47840583094878, -263.60631966449193], [9.372877524150754, -270.28215298695204], [7.267349217352742, -276.95798630941215], [5.161820910554754, -283.63381963187226], [3.0562926037567952, -290.3096529543325], [0.9507642969588423, -296.98548627679287], [0, -300]]
x_pred = [i[0] for i in pred_path]
y_pred = [i[1] for i in pred_path]

''' flock & detection constants '''
pz_center = np.array([0, -300])
pz_rad = 40
limits = [1000, 1000]  # axes limits

turbine_pos = [[pz_center[0 ] +24, pz_center[1 ] +12],
                [pz_center[0 ] +22, pz_center[1 ] -13],
                [pz_center[0 ] -3, pz_center[1 ] +11],
                [pz_center[0 ] -2, pz_center[1 ] -11],
                [pz_center[0 ] -24, pz_center[1 ] +3]]

''' create figure and set axis limits '''
fig, ax = plt.subplots()

# plt.plot(x_cg,y_cg)

line_cg, = ax.plot(x_cg, y_cg, color='k')
line_pred, = ax.plot(x_pred, y_pred, color='blue')

pz_rad_patch = patches.Circle(pz_center, radius=pz_rad, ec='red', fill=False)
ax.add_patch(pz_rad_patch)
ax.scatter(pz_center[0], pz_center[1], marker='+', color='red')

for turbine in turbine_pos:
    ax.scatter(turbine[0], turbine[1], color='k', marker='.')

def update(num, x_cg, y_cg, line_cg, x_pred, y_pred, line_pred):
    line_cg.set_data(x_cg[:num], y_cg[:num])
    line_cg.axes.axis([-200, 200, -400, 0])
    line_pred.set_data(x_pred[:num], y_pred[:num])
    line_pred.axes.axis([-200, 200, -400, 0])


    return line_cg, line_pred

ani = animation.FuncAnimation(fig, update, len(x_cg), fargs=[x_cg, y_cg, line_cg, x_pred, y_pred, line_pred],
                              interval=100, blit=True)
ani.save('cg_path.gif')
plt.show(
)